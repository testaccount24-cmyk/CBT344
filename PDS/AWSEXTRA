         /*Copyright 4 Oct 2001 by JBG REXX AWSExtra                 */
         /*----------------------------------------------------------*/
         /* JBG 15.10.2001 BERNING Extracts all Files from a         */
         /* JBG 15.10.2001 BERNING sequential file produced by       */
         /* JBG 15.10.2001 BERNING AWSUTIL, File 477 of the CBT-Tape.*/
         /* JBG 15.10.2001 BERNING Beats FTPing them to the Support  */
         /* JBG 15.10.2001 BERNING Element, mounting them there and  */
         /* JBG 15.10.2001 BERNING processing them via IEBGENER =>   */
         /*----------------------------------------------------------*/
         /* JBG 15.10.2001 BERNING And it helps if you got a lot of  */
         /* JBG 15.10.2001 BERNING storage available. All the output-*/
         /* JBG 15.10.2001 BERNING lines get queued before writing   */
         /* JBG 15.10.2001 BERNING them to DASD.                     */
         /*----------------------------------------------------------*/
         /* JBG 15.10.2001 BERNING Before executing please have a    */
         /* JBG 15.10.2001 BERNING look at the myOutputDSN-variable. */
         /*----------------------------------------------------------*/
         /* JBG 08.10.2001 BERNING Only Recfm=FB is supported.       */
         /*----------------------------------------------------------*/
         /* The author can be reached at joerg.berning(at)gmx.net    */
         /*----------------------------------------------------------*/
         trace off
         arg myDSN
         myDSN = strip(myDSN,"b","'")
         say time() "Processing "myDSN"..."
         mySaveRC = 0
         "alloc da('"myDSN"') f(in) shr reuse"
         "execio * diskr in(fini stem myLine."
         say time() myLine.0 "lines read."
         "free f(in)"
         /*----------------------------------------------------------*/
         /* JBG 04.10.2001 BERNING Values of Flag1: 80 begin of recor*/
         /* JBG 04.10.2001 BERNING                  40 Tapemark      */
         /* JBG 04.10.2001 BERNING                  20 end of record */
         /*----------------------------------------------------------*/
         myTapemarkFlag = x2c("40")               /* it's a blank... */
         myTapemarkCounter = 0
         myTapeVolser = substr(myLine.2,5,6)
         do i = 1 to myLine.0
/*say time() "i="i                                                   */
           myLineLength = length(myLine.i)
           if myLineLength = 6 then                        /* Header */
             do
               parse value myLine.i with 1 myLOB,  /* Low order byte */
                                         2 myHOB, /* High order byte */
                                         3 myPrevRecordLOB,
                                         4 myPrevRecordHOB,
                                         5 myFlag1,
                                         6 myFlag2,
                                         7 dummy
               if myFlag1 = myTapemarkFlag then
                 do
                   myTapemarkCounter = myTapemarkCounter +1
                   say time() "myTapemarkCounter="myTapemarkCounter
         /*----------------------------------------------------------*/
         /* JBG 05.10.2001 BERNING Format:          Tapemark #       */
         /* JBG 05.10.2001 BERNING VOL1                              */
         /* JBG 05.10.2001 BERNING     HDR1                          */
         /* JBG 05.10.2001 BERNING     HDR2                          */
         /* JBG 05.10.2001 BERNING         TM       1                */
         /* JBG 05.10.2001 BERNING           Dataset #1              */
         /* JBG 05.10.2001 BERNING         TM       2                */
         /* JBG 05.10.2001 BERNING     EOF1                          */
         /* JBG 05.10.2001 BERNING     EOF2                          */
         /* JBG 05.10.2001 BERNING         TM       3 -> 0           */
         /* JBG 05.10.2001 BERNING --------------------------------- */
         /* JBG 05.10.2001 BERNING     HDR1                          */
         /* JBG 05.10.2001 BERNING     HDR2                          */
         /* JBG 05.10.2001 BERNING         TM       4    1           */
         /* JBG 05.10.2001 BERNING           Dataset #2              */
         /* JBG 05.10.2001 BERNING         TM       5    2           */
         /* JBG 05.10.2001 BERNING     EOF1                          */
         /* JBG 05.10.2001 BERNING     EOF2                          */
         /* JBG 05.10.2001 BERNING         TM       6    3           */
         /* JBG 05.10.2001 BERNING --------------------------------- */
         /* JBG 05.10.2001 BERNING TM               7    EOV         */
         /*----------------------------------------------------------*/
                   select
                     when myTapemarkCounter = 1 then
                       do
                         myHDR1Line# = i -3
                         myHDR2Line# = i -1
                         myTapeDSN = substr(myLine.myHDR1Line#,5,17)
                         myTapeDSN = strip(myTapeDSN,"b",".")
                         myTapeDSN = strip(myTapeDSN,"b"," ")
                         myOutputDSN = userid()".TAPE."myTapeVolser||,
                           ".F"time("S")"."myTapeDSN
                                                        /* F, V or U */
                         myRecfm = substr(myLine.myHDR2Line#,5,1)
                         if myRecfm <> "F" then
                           do
                             mySaveRC = 8
                             say time() "Recfm "myRecfm" of",
                               myTapeDSN" is not yet supported."
                             say time() myTapeDSN "not processed,"
                             say time() "setting the RC to",
                               mySaveRC"."
                             myTapemarkCounter = 0
                             iterate
                           end /* of if */
                         myBlksize = substr(myLine.myHDR2Line#,6,5)
                         myLRecl = substr(myLine.myHDR2Line#,11,5)
                                                 /* B, S, R or blank */
                         myBlockAttr = substr(myLine.myHDR2Line#,39,1)
                         myOutputRecfm = myRecfm myBlockAttr
                         myQueueLine = ""
                         "dropbuf"
                         call myFormatData
                       end /* of when */
                     when myTapemarkCounter = 2 then
                       do
                         say time() "Allocating "myOutputDSN"..."
                         "alloc da('"myOutputDSN"') f(out) new reuse",
                           "tracks lrecl("myLRecl")",
                           "recfm("myOutputRecfm")",
                           "space(1500,450) dsorg(ps) release",
                           "storclas(scbackup) dataclas(dcextcom)"
                           queue ""
                           "execio * diskW out(fini"
                           "free f(out)"
                       end /* of when */
                     when myTapemarkCounter = 3 then
                       do
                         my#OfNextLine = i +1
                         parse value myLine.my#OfNextLine with,
                           1 myLOB,
                           2 myHOB,
                           3 myPrevRecordLOB,
                           4 myPrevRecordHOB,
                           5 myFlag1,
                           6 myFlag2,
                           7 dummy
                         if myFlag1 = myTapemarkFlag then     /* EOV */
                           do
                             "dropbuf"
                             say time() "Processing ended."
                             exit mySaveRC           /* quit program */
                           end /* of if */
                         else         /* get ready for the next file */
                           myTapemarkCounter = 0
                       end /* of when */
                     otherwise ;
                   end /* of select */
                 end /* of do */
             end /* of if myLineLength = 6 */
         end /* of do i */
         exit 20                                   /* emergency stop */

         myFormatData:
           j = i +1                 /* j = first line after tapemark */
           do k = j to myLine.0
             parse value myLine.k with 1 myLOB,    /* Low order byte */
                                       2 myHOB,   /* High order byte */
                                       3 myPrevRecordLOB,
                                       4 myPrevRecordHOB,
                                       5 myFlag1,
                                       6 myFlag2,
                                       7 dummy
             myDataLength = c2d(myHOB||myLOB)
/*say "myDataLength="myDataLength                                    */
             if myDataLength = 0 &,             /* the next tapemark */
               myFlag1 = myTapemarkFlag then
               do
                 i = k -1              /* i is now the previous line */
                 return
               end /* of if */
             else
               do           /* 4096 = LRecl - RDW of AWSUtil-Dataset */
                 myWholeBlockAsLine = ""
                 if (myDataLength // 4096) <> 0 then
                   my#OfRowsToFormat = (myDataLength % 4096) +1
                 else
                   my#OfRowsToFormat = myDataLength % 4096
                 do r = (k +1) to (k +my#OfRowsToFormat)
                   myWholeBlockAsLine = myWholeBlockAsLine||,
                     myLine.r
                 end /* of do */
                 do (myBlksize / myLRecl)
                   parse var myWholeBlockAsLine myQueueLine,
                     +(myLRecl) myWholeBlockAsLine
                   queue myQueueline
/*say myQueueline                                                    */
                 end /* of do */
                 k = r -1
               end /* of else */
           end /* of do k */
         return                                     /* is never used */
